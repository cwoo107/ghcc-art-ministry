/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

.background-gradient {
    background: linear-gradient(-45deg, #45321c, #bfa094, #e6d2ae, #f0e4ce);
    background-size: 400% 400%;
    height: 100vh;
}



.bg-image {
    width: 100%;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center top;

}

.image-box-portrait {
    aspect-ratio: 4 / 5;
    width: 100%; /* or any other value */
}

.image-box-portrait img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* to ensure the image covers the area without distortion */
    object-position: center;
}
.image-box-landscape {
    aspect-ratio: 5 / 4;
    width: 100%; /* or any other value */
}

.image-box-landscape img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* to ensure the image covers the area without distortion */
    object-position: center;
}

.image-container {
    position: relative;
}

.placeholder {
    /* Dimensions and styles for your placeholder, e.g., a gray box */
    width: 100px;
    height: 100px;
    background-color: gray;
    /* Center the placeholder if needed */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.actual-image {
    /* Hide initially and show when loaded */
    opacity: 0;
    transition: opacity 0.3s ease;
}

.actual-image.loaded {
    opacity: 1;
}


.image-container {
    position: relative;

    /* Set a fixed width and height or responsive sizes as per your requirements */
}

.placeholder {
    width: 100%;
    height: 100%;
    background-color: gray;
    position: absolute;
    top: 0;
    left: 0;
}

.actual-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;  /* make sure the actual image covers the placeholder */
    height: 100%;
    opacity: 0;
    transition: opacity 0.3s ease;
}

.actual-image.loaded {
    opacity: 1;
}

